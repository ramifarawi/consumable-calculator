{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/work/Desktop/consumable-calculator/src/\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"/Users/work/Desktop/consumable-calculator\",\"filename\":\"/Users/work/Desktop/consumable-calculator/src/calculator.js\",\"targets\":{\"android\":\"4.4.3\",\"chrome\":\"49.0.0\",\"edge\":\"90.0.0\",\"firefox\":\"88.0.0\",\"ie\":\"11.0.0\",\"ios\":\"12.2.0\",\"opera\":\"75.0.0\",\"safari\":\"8.0.0\",\"samsung\":\"13.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/work/Desktop/consumable-calculator\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.6:production": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/work/Desktop/consumable-calculator/src/",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "/Users/work/Desktop/consumable-calculator",
      "filename": "/Users/work/Desktop/consumable-calculator/src/calculator.js",
      "targets": {
        "android": "4.4.3",
        "chrome": "49.0.0",
        "edge": "90.0.0",
        "firefox": "88.0.0",
        "ie": "11.0.0",
        "ios": "12.2.0",
        "opera": "75.0.0",
        "safari": "8.0.0",
        "samsung": "13.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "browserslistConfigFile": false,
      "envName": "production",
      "root": "/Users/work/Desktop/consumable-calculator",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/work/Desktop/consumable-calculator/src/calculator.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/work/Desktop/consumable-calculator/src/calculator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/work/Desktop/consumable-calculator/src/",
        "sourceFileName": "calculator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass AssignLabware {\n  constructor(vol_per_multiplier, multiplier, single_or_multi) {\n    this.vol_per_multiplier = vol_per_multiplier;\n    this.multiplier = multiplier;\n    this.single_or_multi = single_or_multi; // this.vol = Number(vol_per_multiplier)*Number(multiplier)\n  }\n\n} // console.log(liquid_vol)\n// var liquid1 = new AssignLabware(100, 40, 'Multi');\n\n\nfunction Find_labware(liquid) {\n  let vol = liquid.vol_per_multiplier * liquid.multiplier / 1000; // return(vol)\n\n  let single_or_multi = liquid.single_or_multi;\n  let vol_notation = vol > 0.5 ? vol : vol * 1000;\n  let vol_string = vol_notation + (vol > 0.5 ? 'mL' : 'ul');\n  let left_paren = '(';\n  let right_paren = ')';\n  let well_ceiling_res = 14;\n  let well_ceiling_195mL = 185;\n  let well_ceiling_falcon = 45;\n  let well_ceiling_15mL = 13;\n  let well_ceiling_1500ul = 1.2;\n  let well_ceiling_2000ul = 1.7;\n\n  if (liquid.single_or_multi == 'Multi') {\n    // MULTI-CHANNEL ACCESS\n    if (vol > 4 && vol < 185) {\n      let num_wells = Math.ceil(vol / well_ceiling_res);\n\n      if (vol > 50) {\n        return [' Nest 12 Well Reservoir ' + left_paren + num_wells + ' wells' + right_paren + ', or Nest 1 Well Reservior ', vol_string];\n      } else {\n        return [' Nest 12 Well Reservoir ' + left_paren + num_wells + ' wells' + right_paren, vol_string];\n      }\n    } else if (vol >= 50) {\n      let labware_count = Math.ceil(vol / well_ceiling_195mL);\n      return [labware_count + ' Nest 1 Well Reservoirs', vol_string];\n    } else if (vol <= 4) {\n      return ['Well plate', vol_string];\n    }\n  }\n\n  if (liquid.single_or_multi == 'Single') {\n    // SINGLE-CHANNEL ACCESS\n    let num_well_res_12 = Math.ceil(vol / well_ceiling_res);\n    let num_tubes_falcon = Math.ceil(vol / well_ceiling_falcon);\n    let num_tubes_15mL = Math.ceil(vol / well_ceiling_15mL);\n    let nest_12_string = ' Nest 12 Well Reservoir' + left_paren + num_well_res_12 + ' wells' + right_paren;\n    let nest_1_string = ', Nest 1 Well Reservior';\n    let falcon_50_string = ', Falcon 50mL tubes ' + left_paren + num_tubes_falcon + ' tubes ' + right_paren;\n    let tube_15mL_string = ', or 15mL tubes ' + left_paren + num_tubes_15mL + ' tubes' + right_paren;\n\n    if (vol > 10 && vol < 185) {\n      if (vol > 50) {\n        return [nest_12_string + nest_1_string + falcon_50_string + tube_15mL_string, vol_string];\n      } else {\n        return [nest_12_string + falcon_50_string + tube_15mL_string, vol_string];\n      }\n    } else if (vol <= 10) {\n      let num_tubes_1500ul = Math.ceil(vol / well_ceiling_1500ul);\n      let num_tubes_2000ul = Math.ceil(vol / well_ceiling_2000ul);\n      let tube_1500ul_string = left_paren + num_tubes_1500ul + right_paren + ' 1.5mL tubes';\n      let tube_2000ul_string = ', or ' + left_paren + num_tubes_2000ul + right_paren + ' 2mL tubes';\n      return [tube_1500ul_string + tube_2000ul_string, vol_string];\n    } else {\n      let labware_count = Math.ceil(vol / well_ceiling_195mL);\n      return [left_paren + labware_count + right_paren + ' Nest 1 Well Reservior(s)', vol_string];\n    }\n  }\n} // console.log(find_labware(liquid1.vol));\n// module.exports = {find_labware}\n\n\nvar _default = Find_labware;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "calculator.js"
      ],
      "names": [
        "AssignLabware",
        "constructor",
        "vol_per_multiplier",
        "multiplier",
        "single_or_multi",
        "Find_labware",
        "liquid",
        "vol",
        "vol_notation",
        "vol_string",
        "left_paren",
        "right_paren",
        "well_ceiling_res",
        "well_ceiling_195mL",
        "well_ceiling_falcon",
        "well_ceiling_15mL",
        "well_ceiling_1500ul",
        "well_ceiling_2000ul",
        "num_wells",
        "Math",
        "ceil",
        "labware_count",
        "num_well_res_12",
        "num_tubes_falcon",
        "num_tubes_15mL",
        "nest_12_string",
        "nest_1_string",
        "falcon_50_string",
        "tube_15mL_string",
        "num_tubes_1500ul",
        "num_tubes_2000ul",
        "tube_1500ul_string",
        "tube_2000ul_string"
      ],
      "mappings": ";;;;;;;AAAA,MAAMA,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,kBAAD,EAAqBC,UAArB,EAAiCC,eAAjC,EAAiD;AAC1D,SAAKF,kBAAL,GAA0BA,kBAA1B;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,eAAL,GAAuBA,eAAvB,CAH0D,CAI1D;AACD;;AANiB,C,CAQpB;AACA;;;AAEA,SAASC,YAAT,CAAsBC,MAAtB,EAA6B;AAC3B,MAAIC,GAAG,GAAGD,MAAM,CAACJ,kBAAP,GAA0BI,MAAM,CAACH,UAAjC,GAA4C,IAAtD,CAD2B,CAE3B;;AACA,MAAIC,eAAe,GAAGE,MAAM,CAACF,eAA7B;AACA,MAAII,YAAY,GAAID,GAAG,GAAG,GAAP,GAAcA,GAAd,GAAoBA,GAAG,GAAC,IAA3C;AACA,MAAIE,UAAU,GAAGD,YAAY,IAAKD,GAAG,GAAG,GAAP,GAAc,IAAd,GAAqB,IAAzB,CAA7B;AACA,MAAIG,UAAU,GAAG,GAAjB;AACA,MAAIC,WAAW,GAAG,GAAlB;AAEA,MAAIC,gBAAgB,GAAG,EAAvB;AACA,MAAIC,kBAAkB,GAAG,GAAzB;AACA,MAAIC,mBAAmB,GAAG,EAA1B;AACA,MAAIC,iBAAiB,GAAG,EAAxB;AACA,MAAIC,mBAAmB,GAAG,GAA1B;AACA,MAAIC,mBAAmB,GAAG,GAA1B;;AAEA,MAAIX,MAAM,CAACF,eAAP,IAA0B,OAA9B,EAAuC;AAAI;AACzC,QAAIG,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAG,GAArB,EAAyB;AACvB,UAAIW,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUb,GAAG,GAACK,gBAAd,CAAhB;;AACA,UAAIL,GAAG,GAAG,EAAV,EAAa;AACX,eAAO,CAAC,6BAA8BG,UAA9B,GAA2CQ,SAA3C,GAAuD,QAAvD,GAAkEP,WAAlE,GACD,6BADA,EAC+BF,UAD/B,CAAP;AAED,OAHD,MAIK;AACH,eAAO,CAAC,6BAA6BC,UAA7B,GAA0CQ,SAA1C,GAAsD,QAAtD,GAAiEP,WAAlE,EAAgFF,UAAhF,CAAP;AACD;AAEF,KAVD,MAWK,IAAIF,GAAG,IAAI,EAAX,EAAc;AACjB,UAAIc,aAAa,GAAGF,IAAI,CAACC,IAAL,CAAUb,GAAG,GAACM,kBAAd,CAApB;AACA,aAAO,CAACQ,aAAa,GAAG,yBAAjB,EAA4CZ,UAA5C,CAAP;AACD,KAHI,MAIA,IAAIF,GAAG,IAAI,CAAX,EAAc;AACjB,aAAO,CAAC,YAAD,EAAgBE,UAAhB,CAAP;AACD;AACF;;AAED,MAAIH,MAAM,CAACF,eAAP,IAA0B,QAA9B,EAAuC;AAAgB;AACrD,QAAIkB,eAAe,GAAGH,IAAI,CAACC,IAAL,CAAUb,GAAG,GAACK,gBAAd,CAAtB;AACA,QAAIW,gBAAgB,GAAGJ,IAAI,CAACC,IAAL,CAAUb,GAAG,GAACO,mBAAd,CAAvB;AACA,QAAIU,cAAc,GAAGL,IAAI,CAACC,IAAL,CAAUb,GAAG,GAACQ,iBAAd,CAArB;AAEA,QAAIU,cAAc,GAAG,4BAA4Bf,UAA5B,GAAyCY,eAAzC,GAA2D,QAA3D,GAAsEX,WAA3F;AACA,QAAIe,aAAa,GAAG,yBAApB;AACA,QAAIC,gBAAgB,GAAG,yBAAyBjB,UAAzB,GAAsCa,gBAAtC,GAAyD,SAAzD,GAAqEZ,WAA5F;AACA,QAAIiB,gBAAgB,GAAG,qBAAqBlB,UAArB,GAAkCc,cAAlC,GAAmD,QAAnD,GAA8Db,WAArF;;AAEA,QAAIJ,GAAG,GAAG,EAAN,IAAYA,GAAG,GAAG,GAAtB,EAA0B;AACxB,UAAIA,GAAG,GAAG,EAAV,EAAa;AACX,eAAO,CAACkB,cAAc,GAAGC,aAAjB,GAAiCC,gBAAjC,GAAoDC,gBAArD,EAAwEnB,UAAxE,CAAP;AACD,OAFD,MAGK;AACH,eAAO,CAACgB,cAAc,GAAGE,gBAAjB,GAAoCC,gBAArC,EAAuDnB,UAAvD,CAAP;AACD;AAEF,KARD,MASK,IAAIF,GAAG,IAAI,EAAX,EAAc;AAEjB,UAAIsB,gBAAgB,GAAGV,IAAI,CAACC,IAAL,CAAUb,GAAG,GAACS,mBAAd,CAAvB;AACA,UAAIc,gBAAgB,GAAGX,IAAI,CAACC,IAAL,CAAUb,GAAG,GAACU,mBAAd,CAAvB;AAEA,UAAIc,kBAAkB,GAAGrB,UAAU,GAAGmB,gBAAb,GAAgClB,WAAhC,GAA8C,cAAvE;AACA,UAAIqB,kBAAkB,GAAG,UAAUtB,UAAV,GAAuBoB,gBAAvB,GAA0CnB,WAA1C,GAAwD,YAAjF;AAEA,aAAO,CAACoB,kBAAkB,GAAGC,kBAAtB,EAA2CvB,UAA3C,CAAP;AACD,KATI,MAUD;AACF,UAAIY,aAAa,GAAGF,IAAI,CAACC,IAAL,CAAUb,GAAG,GAACM,kBAAd,CAApB;AACA,aAAO,CAACH,UAAU,GAAGW,aAAb,GAA6BV,WAA7B,GAA2C,2BAA5C,EAAyEF,UAAzE,CAAP;AACD;AACF;AACF,C,CACD;AAEA;;;eACeJ,Y",
      "sourceRoot": "/Users/work/Desktop/consumable-calculator/src/",
      "sourcesContent": [
        "class AssignLabware {\n  constructor(vol_per_multiplier, multiplier, single_or_multi){\n    this.vol_per_multiplier = vol_per_multiplier;\n    this.multiplier = multiplier;\n    this.single_or_multi = single_or_multi;\n    // this.vol = Number(vol_per_multiplier)*Number(multiplier)\n  }\n}\n// console.log(liquid_vol)\n// var liquid1 = new AssignLabware(100, 40, 'Multi');\n\nfunction Find_labware(liquid){\n  let vol = liquid.vol_per_multiplier*liquid.multiplier/1000;\n  // return(vol)\n  let single_or_multi = liquid.single_or_multi;\n  let vol_notation = (vol > 0.5) ? vol : vol*1000\n  let vol_string = vol_notation + ((vol > 0.5) ? 'mL' : 'ul')\n  let left_paren = '('\n  let right_paren = ')'\n\n  let well_ceiling_res = 14\n  let well_ceiling_195mL = 185\n  let well_ceiling_falcon = 45\n  let well_ceiling_15mL = 13\n  let well_ceiling_1500ul = 1.2\n  let well_ceiling_2000ul = 1.7\n\n  if (liquid.single_or_multi == 'Multi') {   // MULTI-CHANNEL ACCESS\n    if (vol > 4 && vol < 185){\n      let num_wells = Math.ceil(vol/well_ceiling_res);\n      if (vol > 50){\n        return([' Nest 12 Well Reservoir ' +  left_paren + num_wells + ' wells' + right_paren +\n               ', or Nest 1 Well Reservior ', vol_string])\n      }\n      else {\n        return([' Nest 12 Well Reservoir ' + left_paren + num_wells + ' wells' + right_paren , vol_string]);\n      }\n\n    }\n    else if (vol >= 50){\n      let labware_count = Math.ceil(vol/well_ceiling_195mL);\n      return([labware_count + ' Nest 1 Well Reservoirs', vol_string] );\n    }\n    else if (vol <= 4) {\n      return(['Well plate' , vol_string]);\n    }\n  }\n\n  if (liquid.single_or_multi == 'Single'){               // SINGLE-CHANNEL ACCESS\n    let num_well_res_12 = Math.ceil(vol/well_ceiling_res);\n    let num_tubes_falcon = Math.ceil(vol/well_ceiling_falcon);\n    let num_tubes_15mL = Math.ceil(vol/well_ceiling_15mL);\n\n    let nest_12_string = ' Nest 12 Well Reservoir' + left_paren + num_well_res_12 + ' wells' + right_paren\n    let nest_1_string = ', Nest 1 Well Reservior'\n    let falcon_50_string = ', Falcon 50mL tubes ' + left_paren + num_tubes_falcon + ' tubes ' + right_paren\n    let tube_15mL_string = ', or 15mL tubes ' + left_paren + num_tubes_15mL + ' tubes' + right_paren\n\n    if (vol > 10 && vol < 185){\n      if (vol > 50){\n        return([nest_12_string + nest_1_string + falcon_50_string + tube_15mL_string , vol_string])\n      }\n      else {\n        return([nest_12_string + falcon_50_string + tube_15mL_string, vol_string])\n      }\n\n    }\n    else if (vol <= 10){\n\n      let num_tubes_1500ul = Math.ceil(vol/well_ceiling_1500ul);\n      let num_tubes_2000ul = Math.ceil(vol/well_ceiling_2000ul);\n\n      let tube_1500ul_string = left_paren + num_tubes_1500ul + right_paren + ' 1.5mL tubes'\n      let tube_2000ul_string = ', or ' + left_paren + num_tubes_2000ul + right_paren + ' 2mL tubes'\n\n      return([tube_1500ul_string + tube_2000ul_string , vol_string]);\n    }\n    else{\n      let labware_count = Math.ceil(vol/well_ceiling_195mL);\n      return([left_paren + labware_count + right_paren + ' Nest 1 Well Reservior(s)', vol_string])\n    }\n  }\n}\n// console.log(find_labware(liquid1.vol));\n\n// module.exports = {find_labware}\nexport default Find_labware;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1628709678711
  }
}